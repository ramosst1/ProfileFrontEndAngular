{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n/** Error when invalid control is dirty, touched, or submitted. */\n\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n\n}\nlet LoginComponent = class LoginComponent {\n  constructor(dialogRef, data, fb) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.matcher = new MyErrorStateMatcher();\n    this.uxForm = fb.group({\n      emailFormControl: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(40), Validators.email]),\n      uxUserPassword: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(40)])\n    });\n  }\n\n  submitLogin() {\n    this.dialogRef.close();\n  }\n\n  cancelLogin() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {}\n\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n}), __param(1, Inject(MAT_DIALOG_DATA))], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module"}