{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ProfileFormComponent } from '../profile-form/profile-form.component';\nimport { FormControl } from '@angular/forms';\nlet UserProfilesComponent = class UserProfilesComponent {\n  constructor(profileService, dialogProfileDetail, aForm) {\n    this.profileService = profileService;\n    this.dialogProfileDetail = dialogProfileDetail;\n    this.aForm = aForm;\n    this.title = \"User Profiles\";\n    this.errorMessages = [];\n    this.uxFormProfiles = aForm.group({\n      uxProfileActiveFilter: new FormControl(\"true\")\n    });\n  }\n\n  ngOnInit() {\n    let ProfilterFilteredValue = this.GetProfileFiterValue();\n    this.profileService.getProfiles().subscribe(data => {\n      this.profiles = data.profiles;\n      this.dataSource = this.profiles.filter(aItem => {\n        return aItem.active === ProfilterFilteredValue;\n      });\n    }, error => {\n      this.errorMessages = error;\n    });\n  }\n\n  openDialog(aProfile) {\n    const dialogProfileRef = this.dialogProfileDetail.open(ProfileFormComponent, {\n      panelClass: 'Test',\n      width: \"500px\",\n      data: aProfile == undefined ? null : aProfile\n    });\n    dialogProfileRef.afterClosed().subscribe(result => {\n      let ProfileActiveFilter = true; //      if (result === \"success\") {\n\n      this.RefreshProfileList(); //      }\n    });\n  }\n\n  FilterProfilesClick(active) {\n    this.dataSource = this.profiles.filter(aItem => {\n      return active === undefined || aItem.active === active;\n    });\n  }\n\n  GetProfileFiterValue() {\n    let Filter = this.uxFormProfiles.controls.uxProfileActiveFilter.value;\n\n    switch (Filter) {\n      case \"false\":\n        return false;\n\n      case null:\n      case \"\":\n      case undefined:\n        return undefined;\n    }\n\n    return true;\n  }\n\n  RefreshProfileList() {\n    let ProfileActiveFilter = this.GetProfileFiterValue();\n    this.profileService.getProfiles().subscribe(data => {\n      this.profiles = data.profiles;\n      this.dataSource = this.profiles.filter(aItem => {\n        return ProfileActiveFilter === undefined || aItem.active === ProfileActiveFilter;\n      });\n    });\n  }\n\n  editProfileClick(aProfile) {\n    this.openDialog(aProfile);\n  }\n\n  deleteProfileClick(profile) {\n    let ConfirmResponse = window.confirm(\"Are you sure you want to delete the record?\");\n\n    if (ConfirmResponse) {\n      this.profileService.deleteProfile(profile).subscribe(data => {\n        if (data == true) {\n          this.RefreshProfileList();\n        }\n      }, error => this.errorMessages = error);\n    }\n  }\n\n};\nUserProfilesComponent = __decorate([Component({\n  selector: \"app-user-profiles\",\n  templateUrl: \"./user-profiles.component.html\",\n  styleUrls: [\"./user-profiles.component.scss\"]\n})], UserProfilesComponent);\nexport { UserProfilesComponent };","map":null,"metadata":{},"sourceType":"module"}